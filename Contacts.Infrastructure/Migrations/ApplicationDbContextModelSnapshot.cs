// <auto-generated />
using System;
using Contacts.Infrastructure.Repositories.Postgres.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Contacts.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.CategoriesDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("04280a09-fc05-4e53-ae32-29f991dca066"),
                            Name = "Private"
                        },
                        new
                        {
                            Id = new Guid("1a95a6d6-8e45-41db-b149-d9d79f23c392"),
                            Name = "Business"
                        },
                        new
                        {
                            Id = new Guid("31144dff-a3ce-4c00-ad5a-2c2e06f7dd8b"),
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.ContactsDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_contacts");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_contacts_category_id");

                    b.ToTable("contacts", (string)null);
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.SubcategoriesDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("category_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_subcategories");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_subcategories_category_id");

                    b.ToTable("subcategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ea6c6b-aff3-487f-b7f2-b76af18a44d9"),
                            CategoryId = new Guid("1a95a6d6-8e45-41db-b149-d9d79f23c392"),
                            Name = "Boss"
                        },
                        new
                        {
                            Id = new Guid("f4aa8bb8-9b1f-478a-9f94-f9b7c367a6e3"),
                            CategoryId = new Guid("1a95a6d6-8e45-41db-b149-d9d79f23c392"),
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.UsersDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.ContactsDb", b =>
                {
                    b.HasOne("Contacts.Infrastructure.Repositories.Postgres.Models.CategoriesDb", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_contacts_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.SubcategoriesDb", b =>
                {
                    b.HasOne("Contacts.Infrastructure.Repositories.Postgres.Models.CategoriesDb", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_subcategories_categories_category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Contacts.Infrastructure.Repositories.Postgres.Models.CategoriesDb", b =>
                {
                    b.Navigation("Subcategories");
                });
#pragma warning restore 612, 618
        }
    }
}
